<div class="popup-form-container">
	<div class="popup-close"></div>
	<div class="popup-form">
		<h2 class="popup-form__title">{{#if title}}
			{{title}}
		{{else}}
		GET STARTED TODAY
		{{/if}}</h2>
		<script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/embed/v2.js"></script>
		{{#if form_id}}
			<div class="popup-form__hubspot"></div>
			<script>
				const formContainer = document.querySelector('.popup-form-container');

				// Function to create HubSpot form
				function createHubSpotForm() {
					const hubspotContainer = document.querySelector('.popup-form__hubspot');
					const hubspotForm = document.createElement('script');
					hubspotForm.innerHTML = `
						hbspt.forms.create({
							region: "na1",
							portalId: "41638633",
							formId: "9756ac78-5731-4410-a723-4eca6a2f707f"
						});
					`
					hubspotContainer.appendChild(hubspotForm)
				}

				// Function to remove HubSpot form
				function removeHubSpotForm() {
					const form = document.querySelector('.hbspt-form');
					if (form) {
						form.remove(); // Remove the form
					}
					const hubspotContainer = document.querySelector('.popup-form__hubspot');
					hubspotContainer.innerHTML = '';
				}

				// Callback function to be executed when a mutation is observed
				const mutationCallback = function(mutationsList, observer) {
					for (const mutation of mutationsList) {
						if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
							if (formContainer.classList.contains('active')) {
								// If formContainer has the active class
								createHubSpotForm();
							} else {
								// If formContainer loses the active class
								removeHubSpotForm();
							}
						}
					}
				};

				// Create a MutationObserver instance and pass the callback function
				const observer = new MutationObserver(mutationCallback);

				// Configure the observer to watch for changes to attributes
				const config = { attributes: true, attributeOldValue: true, attributeFilter: ['class'] };

				// Start observing the target element
				observer.observe(formContainer, config);
			</script>
		{{else}}
			<script>
				hbspt.forms.create({
					region: "na1",
					portalId: "41638633",
					formId: "5e3478c3-7bc6-4e81-afa2-dd0a20f5f199"
				});
			</script>
		{{/if}}
	</div>
</div>